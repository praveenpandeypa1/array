// there is one another method of sorting this is make  variable count0 count1 and count 2and take note of no of 0 1 2 and then at last store the same amount of 0 1 2 in the last in the array .and it gets solved:

// the second method is diffrent from this use three pointer left right and mid here the rangle of low will be from 0 to low-1 and mid range will be from low to mid-1 and high range will be from mid to high -1

// and just compare with middle value untill it gose to its place :

#include<iostream>
#include<algorithm>
#include<vector>
using namespace std;
void sorted(vector<int>&arr)
{
    int left=0;
    int right=arr.size()-1;
    int mid=0;
    while(mid<=right)
    {
        if(arr[mid]==0)
        {
            swap(arr[left],arr[mid]);
            left++;
            mid++;
        }
        else if(arr[mid]==1)
        {
            mid++;
            
        }
        else if(arr[mid]==2)
        {
          swap(arr[mid],arr[right]);
          right--;
        }
    }
}
int main()
{
    int n;
    cin>>n;
    vector<int>arr(n);
    for(int i=0;i<n;i++)
    {
        cin>>arr[i];
    }
    sorted(arr);
    for(int num:arr)
    {
        cout<<num<<" ";
    }
    return 0;
}

// this is the code of what i written there:
